<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[LORRIN'S BLOG]]></title>
  <subtitle><![CDATA[Do more,think more]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.lixiaolin.me/"/>
  <updated>2016-01-03T15:01:04.264Z</updated>
  <id>http://www.lixiaolin.me/</id>
  
  <author>
    <name><![CDATA[Lorrin]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[Oracle存储过程和job在项目中的应用]]></title>
    <link href="http://www.lixiaolin.me/2016/01/03/oracle-procedure-job/"/>
    <id>http://www.lixiaolin.me/2016/01/03/oracle-procedure-job/</id>
    <published>2016-01-03T14:55:38.000Z</published>
    <updated>2016-01-03T15:01:04.264Z</updated>
    <content type="html"><![CDATA[<p>最近在实习公司的项目开发中有遇到这么一个需求：在做一个电价管理系统中，有新增电价这么一个功能，新增电价默认不生效，用户可以手动选择生效的时间，到了时间电价就自动变成生效，<a id="more"></a><br>如下图所示<br><img src="http://img.blog.csdn.net/20150817151002706" alt="这里写图片描述"><br>在界面中是这样的<br><img src="http://img.blog.csdn.net/20150817151033155" alt="这里写图片描述"></p>
<p>对于这个需求我们可以利用存储过程和job来实现。<br>新建一个存储过程对电价生效标志进行更新，然后在job中每天定时执行这个存储过程<br>sql语句如下:</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">--create procedure</span></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">procedure</span> p_carstatus <span class="keyword">as</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"> <span class="keyword">update</span> e_price <span class="keyword">e</span> <span class="keyword">set</span> <span class="keyword">e</span>.release_flag=<span class="string">'是'</span> <span class="keyword">where</span> <span class="keyword">sysdate</span> &gt; <span class="keyword">e</span>.release_date;</span></span><br><span class="line"><span class="operator"><span class="keyword">COMMIT</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">end</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">--create job</span></span><br><span class="line"><span class="operator"><span class="keyword">declare</span></span><br><span class="line">jobno   <span class="built_in">number</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">begin</span></span><br><span class="line">dbms_job.submit(:jobno,<span class="string">'p_carstatus;'</span>,<span class="keyword">sysdate</span>,<span class="string">'trunc(sysdate)+1'</span>);</span><span class="comment">--每天凌晨，注意不要漏掉 jobno前面的:</span></span><br><span class="line"><span class="operator"><span class="keyword">commit</span>;</span></span><br><span class="line"><span class="operator"><span class="keyword">end</span>;</span></span><br></pre></td></tr></table></figure>
<p>这样就能实现定时对电价生效标志进行更新了，以上只是一个例子，存储过程和job结合使用的例子还有很多。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近在实习公司的项目开发中有遇到这么一个需求：在做一个电价管理系统中，有新增电价这么一个功能，新增电价默认不生效，用户可以手动选择生效的时间，到了时间电价就自动变成生效，]]>
    
    </summary>
    
      <category term="ORACLE" scheme="http://www.lixiaolin.me/tags/ORACLE/"/>
    
      <category term="PROCEDURE" scheme="http://www.lixiaolin.me/tags/PROCEDURE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[非递归实现二叉树的层次遍历]]></title>
    <link href="http://www.lixiaolin.me/2016/01/03/algorithm-binary-tree-levelorder/"/>
    <id>http://www.lixiaolin.me/2016/01/03/algorithm-binary-tree-levelorder/</id>
    <published>2016-01-03T14:51:39.000Z</published>
    <updated>2016-01-03T15:00:43.715Z</updated>
    <content type="html"><![CDATA[<p>非递归的层次遍历其实很简单。利用了队列先进先出的特点。<br>先将根节点入队。如果队列不为空，那么获得队首元素，对其访问。如果它的左子树不为空，那么加入队列，如果它的右子树不为空，那么加入队列。<br><a id="more"></a></p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">   * 层次遍历</span><br><span class="line">   * @param root</span><br><span class="line">   */</span><br><span class="line">  public void levelOrder(<span class="keyword">Node</span><span class="identifier"> </span><span class="title">root</span>)&#123;</span><br><span class="line">    if(<span class="variable">root=</span>=null)&#123;</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">    Queue<span class="tag">&lt;Node&gt;</span> <span class="variable">queue=</span>new LinkedList<span class="tag">&lt;Node&gt;</span>();</span><br><span class="line">    <span class="keyword">Node</span><span class="identifier"> </span><span class="title">node</span>=root;</span><br><span class="line">    queue.add(<span class="keyword">node</span><span class="identifier"></span><span class="title">);</span><br><span class="line">    while</span>(!queue.isEmpty())&#123;</span><br><span class="line">      <span class="keyword">node</span><span class="identifier"></span><span class="title">=queue</span>.poll();</span><br><span class="line">      visted(<span class="keyword">node</span><span class="identifier"></span><span class="title">);</span><br><span class="line">      if</span>(<span class="keyword">node</span>.<span class="identifier"></span><span class="title">leftChild</span>!=null)&#123;</span><br><span class="line">        queue.add(<span class="keyword">node</span>.<span class="identifier"></span><span class="title">leftChild</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      if(<span class="keyword">node</span>.<span class="identifier"></span><span class="title">rightChild</span>!=null)&#123;</span><br><span class="line">        queue.add(<span class="keyword">node</span>.<span class="identifier"></span><span class="title">rightChild</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>非递归的层次遍历其实很简单。利用了队列先进先出的特点。<br>先将根节点入队。如果队列不为空，那么获得队首元素，对其访问。如果它的左子树不为空，那么加入队列，如果它的右子树不为空，那么加入队列。<br>]]>
    
    </summary>
    
      <category term="Algorithm" scheme="http://www.lixiaolin.me/tags/Algorithm/"/>
    
      <category term="Binary-Tree" scheme="http://www.lixiaolin.me/tags/Binary-Tree/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[二叉树的常用操作]]></title>
    <link href="http://www.lixiaolin.me/2016/01/03/algorithm-binary-tree/"/>
    <id>http://www.lixiaolin.me/2016/01/03/algorithm-binary-tree/</id>
    <published>2016-01-03T14:49:54.000Z</published>
    <updated>2016-01-03T15:00:28.473Z</updated>
    <content type="html"><![CDATA[<a id="more"></a>
<p>####<strong>一、求二叉树高度</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   * 求二叉树高度</span><br><span class="line">   * @param root</span><br><span class="line">   * @return</span><br><span class="line">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getHeight</span><span class="params">(Node root)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root==null)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> l=getHeight(root.leftChild);</span><br><span class="line">    <span class="keyword">int</span> r=getHeight(root.rightChild);</span><br><span class="line">    <span class="keyword">return</span> l&gt;r?l+<span class="number">1</span>:r+<span class="number">1</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>
<p>####<strong>二、求二叉树结点总数</strong></p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   * 求二叉树结点总数</span><br><span class="line">   * <span class="doctag">@param</span> root</span><br><span class="line">   * <span class="doctag">@return</span></span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">int</span> <span class="title">getSize</span><span class="params">(Node root)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root==<span class="keyword">null</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>+getSize(root.leftChild)+getSize(root.rightChild);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>####<strong>二、递归交换左右子树</strong></p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">   * 交换左右子树</span><br><span class="line">   * @param root</span><br><span class="line">   */</span><br><span class="line">  public void swapLeftAndRight(<span class="keyword">Node</span><span class="identifier"> </span><span class="title">root</span>)&#123;</span><br><span class="line">    if(<span class="variable">root=</span>=null)&#123;</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">Node</span><span class="identifier"> </span><span class="title">temp</span>=new <span class="keyword">Node</span><span class="identifier"></span><span class="title">();</span><br><span class="line">    temp</span>=root.leftChild;</span><br><span class="line">    root.<span class="variable">leftChild=</span>root.rightChild;</span><br><span class="line">    root.<span class="variable">rightChild=</span>temp;</span><br><span class="line">    swapLeftAndRight(root.leftChild);</span><br><span class="line">    swapLeftAndRight(root.rightChild);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>####<strong>三、非递归交换左右子树</strong></p>
<figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">   * 非递归交换左右子树</span><br><span class="line">   * @param root</span><br><span class="line">   */</span><br><span class="line">  public void swapLeftAndRightNoRec(<span class="keyword">Node</span><span class="identifier"> </span><span class="title">root</span>)&#123;</span><br><span class="line">    if(<span class="variable">root=</span>=null)&#123;</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">Node</span><span class="identifier"> </span><span class="title">node</span>=root;</span><br><span class="line">    Queue<span class="tag">&lt;Node&gt;</span> <span class="variable">queue=</span>new LinkedList<span class="tag">&lt;Node&gt;</span>();</span><br><span class="line">    queue.add(<span class="keyword">node</span><span class="identifier"></span><span class="title">);</span><br><span class="line">    while</span>(!queue.isEmpty())&#123;</span><br><span class="line">      <span class="keyword">node</span><span class="identifier"></span><span class="title">=queue</span>.poll();</span><br><span class="line">      <span class="keyword">Node</span><span class="identifier"> </span><span class="title">temp</span>=new <span class="keyword">Node</span><span class="identifier"></span><span class="title">();</span><br><span class="line">      temp</span>=<span class="keyword">node</span>.<span class="identifier"></span><span class="title">leftChild</span>;</span><br><span class="line">      <span class="keyword">node</span>.<span class="identifier"></span><span class="title">leftChild</span>=<span class="keyword">node</span>.<span class="identifier"></span><span class="title">rightChild</span>;</span><br><span class="line">      <span class="keyword">node</span>.<span class="identifier"></span><span class="title">rightChild</span>=temp;</span><br><span class="line">      if(<span class="keyword">node</span>.<span class="identifier"></span><span class="title">leftChild</span>!=null)&#123;</span><br><span class="line">        queue.add(<span class="keyword">node</span>.<span class="identifier"></span><span class="title">leftChild</span>);</span><br><span class="line">      &#125;</span><br><span class="line">      if(<span class="keyword">node</span>.<span class="identifier"></span><span class="title">rightChild</span>!=null)&#123;</span><br><span class="line">        queue.add(<span class="keyword">node</span>.<span class="identifier"></span><span class="title">rightChild</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>####<strong>四、在二叉树中查找某个节点</strong></p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line">   * 递归查找二叉树中是否存在某个节点</span><br><span class="line">   * <span class="doctag">@param</span> root</span><br><span class="line">   * <span class="doctag">@param</span> cNode</span><br><span class="line">   * <span class="doctag">@return</span></span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="function"><span class="keyword">boolean</span> <span class="title">checkNode</span><span class="params">(Node root,Node cNode)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(root==<span class="keyword">null</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">else</span> <span class="title">if</span><span class="params">(root==cNode)</span></span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">boolean</span> existsFlag=<span class="keyword">false</span>;</span><br><span class="line">      <span class="keyword">if</span>(root.leftChild!=<span class="keyword">null</span>)&#123;</span><br><span class="line">        existsFlag=checkNode(root.leftChild, cNode);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(!existsFlag&amp;&amp;root.rightChild!=<span class="keyword">null</span>)&#123;</span><br><span class="line">        existsFlag=checkNode(root.rightChild, cNode);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">return</span> existsFlag;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>####<strong>五、查找两个结点的最近父节点</strong></p>
<figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function">Node <span class="title">getNearsetFarther</span><span class="params">(Node root,Node node1,Node node2)</span></span>&#123;</span><br><span class="line">    <span class="comment">//如果node2的node1的子树中</span></span><br><span class="line">    <span class="keyword">if</span>(checkNode(node1, node2))&#123;</span><br><span class="line">      <span class="keyword">return</span> node1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果node1在node2的子树中</span></span><br><span class="line">    <span class="keyword">if</span>(checkNode(node2, node1))&#123;</span><br><span class="line">      <span class="keyword">return</span> node2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">boolean</span> oneInLeft,oneInRight,twoInLeft,twoInRight;</span><br><span class="line">    oneInLeft=checkNode(root.leftChild, node1);</span><br><span class="line">    oneInRight=checkNode(root.rightChild, node1);</span><br><span class="line">    twoInLeft=checkNode(root.leftChild,node2);</span><br><span class="line">    twoInRight=checkNode(root.rightChild, node2);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//node1和node2不在同一边</span></span><br><span class="line">    <span class="keyword">if</span>((oneInLeft&amp;&amp;twoInRight)||(oneInRight&amp;&amp;oneInLeft))&#123;</span><br><span class="line">      <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//node1和node2都在左边</span></span><br><span class="line">    <span class="keyword">if</span>(oneInLeft&amp;&amp;twoInLeft)&#123;</span><br><span class="line">      <span class="function"><span class="keyword">return</span> <span class="title">getNearsetFarther</span><span class="params">(root.leftChild, node1, node2)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//node1和node2都在右边</span></span><br><span class="line">    <span class="keyword">if</span>(oneInRight&amp;&amp;twoInRight)&#123;</span><br><span class="line">      <span class="function"><span class="keyword">return</span> <span class="title">getNearsetFarther</span><span class="params">(root.rightChild, node1, node2)</span></span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<a id="more"></a>
<p>####<strong>一、求二叉树高度</strong><br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1<]]>
    </summary>
    
      <category term="Algorithm" scheme="http://www.lixiaolin.me/tags/Algorithm/"/>
    
      <category term="Binary-Tree" scheme="http://www.lixiaolin.me/tags/Binary-Tree/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[实现超大整数（超过long长度范围）的加法运算]]></title>
    <link href="http://www.lixiaolin.me/2016/01/03/skill-biglong-int/"/>
    <id>http://www.lixiaolin.me/2016/01/03/skill-biglong-int/</id>
    <published>2016-01-03T14:48:22.000Z</published>
    <updated>2016-01-03T14:59:57.650Z</updated>
    <content type="html"><![CDATA[<p>昨天笔试，遇到这么一个问题：如果系统要使用超大整数（超过long长度范围），请你设计一个数据结构来存储这种超大型数字以及设计一种算法来实现超大整数加法运算）。<br>其实这个问题很好解决，超大整数可以直接使用String来存储。对于两个String存储的超大整数的相加，先比较二者长度，在短的那个前面补0，使两个String一样长。<br><a id="more"></a><br>然后从尾部开始，挨个取数，相加并进位即可。代码如下：</p>
<figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">public <span class="type">String</span> numAdd(<span class="type">String</span> a,<span class="type">String</span> b)&#123;</span><br><span class="line">    <span class="type">String</span> str=<span class="string">""</span>;</span><br><span class="line">    <span class="type">int</span> lenA=a.length();</span><br><span class="line">    <span class="type">int</span> lenB=b.length();</span><br><span class="line">    <span class="type">int</span> maxLen=lenA&gt;lenB?lenA:lenB;</span><br><span class="line">    <span class="type">int</span> minLen=lenA&lt;lenB?lenA:lenB;</span><br><span class="line">    <span class="type">StringBuilder</span> sb=new <span class="type">StringBuilder</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;maxLen-minLen;i++)&#123;</span><br><span class="line">      sb.append(<span class="string">"0"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(lenA==minLen)&#123;</span><br><span class="line">      a=sb.append(a).toString();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      b=sb.append(b).toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    sb=new <span class="type">StringBuilder</span>();</span><br><span class="line">    <span class="type">int</span> tempA,tempB,<span class="literal">result</span>;</span><br><span class="line">    <span class="type">int</span> sc=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=maxLen-<span class="number">1</span>;i&gt;=<span class="number">0</span>;i--)&#123;</span><br><span class="line">      tempA=<span class="type">Integer</span>.valueOf(a.charAt(i)+<span class="string">""</span>);</span><br><span class="line">      tempB=<span class="type">Integer</span>.valueOf(b.charAt(i)+<span class="string">""</span>);</span><br><span class="line">      <span class="literal">result</span>=tempA+tempB+sc;</span><br><span class="line">      sc=<span class="literal">result</span>/<span class="number">10</span>;</span><br><span class="line">      <span class="literal">result</span>=<span class="literal">result</span>%<span class="number">10</span>;</span><br><span class="line">      sb.append(<span class="literal">result</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(sc==<span class="number">1</span>)&#123;</span><br><span class="line">      sb.append(sb);</span><br><span class="line">    &#125;</span><br><span class="line">    str=sb.reverse().toString();</span><br><span class="line">    <span class="keyword">return</span> str;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>昨天笔试，遇到这么一个问题：如果系统要使用超大整数（超过long长度范围），请你设计一个数据结构来存储这种超大型数字以及设计一种算法来实现超大整数加法运算）。<br>其实这个问题很好解决，超大整数可以直接使用String来存储。对于两个String存储的超大整数的相加，先比较二者长度，在短的那个前面补0，使两个String一样长。<br>]]>
    
    </summary>
    
      <category term="JAVA" scheme="http://www.lixiaolin.me/tags/JAVA/"/>
    
      <category term="SKILL" scheme="http://www.lixiaolin.me/tags/SKILL/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[JS实现省份、城市的级联选择]]></title>
    <link href="http://www.lixiaolin.me/2016/01/03/js-select-city/"/>
    <id>http://www.lixiaolin.me/2016/01/03/js-select-city/</id>
    <published>2016-01-03T14:46:02.000Z</published>
    <updated>2016-01-03T14:59:39.420Z</updated>
    <content type="html"><![CDATA[<p>实现省份、城市的级联选择，可以用纯JS实现，当然也可以使用jquery实现，下面就讲一下如何用纯javascript实现。<br>其实实现JS这个很简单，有两点需要注意：<br>1、对省份的下拉框的onchange事件进行监听，一旦省份被改变，那么就去xml资源文件里获取对应的城市，创建新的option节点，将之挂载在城市节点下。<br>2、有个地方需要注意，在监听事件里，首先需要先删除除city下第一个子节点外的所有的option节点，这是清除上一次的选择信息。<br>3、在清除上次选择的城市的时候，需要注意获得的城市节点数组的长度是不断变化的。<br><a id="more"></a><br>代码如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>js-9.html<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="built_in">window</span>.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> provinceNode=<span class="built_in">document</span>.getElementById(<span class="string">'province'</span>);</span><br><span class="line">        provinceNode.onchange=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="comment">//清除city节点的所有子节点（除第一个节点）</span></span><br><span class="line">            <span class="keyword">var</span> cityNode=<span class="built_in">document</span>.getElementById(<span class="string">'city'</span>);</span><br><span class="line">            <span class="keyword">var</span> cityNodeOptions=cityNode.getElementsByTagName(<span class="string">'option'</span>);</span><br><span class="line">            <span class="keyword">var</span> len=cityNodeOptions.length;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">1</span>;i&lt;len;i++)&#123;</span><br><span class="line">                <span class="comment">//每次都清除第2个，因为数组cityNodeOptions的长度是动态变化的</span></span><br><span class="line">                cityNode.removeChild(cityNodeOptions[<span class="number">1</span>]);</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="keyword">var</span> provinceVal=<span class="keyword">this</span>.value;</span><br><span class="line">            <span class="keyword">if</span>(provinceVal==<span class="literal">null</span>)&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            <span class="comment">//加载city.xml文件</span></span><br><span class="line">            <span class="keyword">var</span> xmlDoc=parseXml(<span class="string">'cities.xml'</span>);</span><br><span class="line">            <span class="comment">//使用XPATH技术，在xml中查找匹配的province节点</span></span><br><span class="line">            <span class="keyword">var</span> provinceEles = xmlDoc.selectNodes(<span class="string">"//province[@name='"</span></span><br><span class="line">                                         + provinceVal + <span class="string">"']"</span>);</span><br><span class="line">            <span class="keyword">var</span> cityNodes=provinceEles[<span class="number">0</span>].getElementsByTagName(<span class="string">'city'</span>);</span><br><span class="line">            <span class="comment">//遍历city，得到每个文本值，创建新的节点并添加</span></span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;cityNodes.length;i++)&#123;</span><br><span class="line">                <span class="keyword">var</span> text=cityNodes[i].firstChild.nodeValue;</span><br><span class="line">                <span class="keyword">var</span> addNodeOption=<span class="built_in">document</span>.createElement(<span class="string">'option'</span>);</span><br><span class="line">                <span class="keyword">var</span> addNodeText=<span class="built_in">document</span>.createTextNode(text);</span><br><span class="line">                addNodeOption.appendChild(addNodeText);</span><br><span class="line">                <span class="comment">//将新节点挂载到city节点下</span></span><br><span class="line">                cityNode.appendChild(addNodeOption);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parseXml</span>(<span class="params">fileName</span>)</span>&#123;</span><br><span class="line">      <span class="comment">//IE 内核的浏览器</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="built_in">window</span>.ActiveXObject) &#123;</span><br><span class="line">          <span class="comment">//创建 DOM 解析器</span></span><br><span class="line">          <span class="keyword">var</span> doc = <span class="keyword">new</span> ActiveXObject(<span class="string">"Microsoft.XMLDOM"</span>);</span><br><span class="line">          doc.async = <span class="string">"false"</span>;</span><br><span class="line">          <span class="comment">//加载 XML 文档, 获取 XML 文档对象</span></span><br><span class="line">          doc.load(fileName);</span><br><span class="line">          <span class="keyword">return</span> doc;</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">   </span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"content-type"</span> <span class="attribute">content</span>=<span class="value">"text/html; charset=UTF-8"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">select</span> <span class="attribute">id</span>=<span class="value">"province"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">""</span>&gt;</span>请选择...<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"河北省"</span>&gt;</span>河北省<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"辽宁省"</span>&gt;</span>辽宁省<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">"山东省"</span>&gt;</span>山东省<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="title">select</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">select</span> <span class="attribute">id</span>=<span class="value">'city'</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="title">option</span> <span class="attribute">value</span>=<span class="value">""</span>&gt;</span>请选择...<span class="tag">&lt;/<span class="title">option</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;/<span class="title">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>所使用的资源文件 cityes.xml如下：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="pi">&lt;?xml version="1.0" encoding="GB2312"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">china</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">province</span> <span class="attribute">name</span>=<span class="value">"河北省"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>石家庄<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>邯郸<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>唐山<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>张家口<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>廊坊<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>保定<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>承德<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">province</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">province</span> <span class="attribute">name</span>=<span class="value">"辽宁省"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>沈阳<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>大连<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>鞍山<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>抚顺<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>铁岭<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">province</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="title">province</span> <span class="attribute">name</span>=<span class="value">"山东省"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>济南<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>青岛<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>威海<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>烟台<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">city</span>&gt;</span>潍坊<span class="tag">&lt;/<span class="title">city</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">province</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="title">china</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>实现省份、城市的级联选择，可以用纯JS实现，当然也可以使用jquery实现，下面就讲一下如何用纯javascript实现。<br>其实实现JS这个很简单，有两点需要注意：<br>1、对省份的下拉框的onchange事件进行监听，一旦省份被改变，那么就去xml资源文件里获取对应的城市，创建新的option节点，将之挂载在城市节点下。<br>2、有个地方需要注意，在监听事件里，首先需要先删除除city下第一个子节点外的所有的option节点，这是清除上一次的选择信息。<br>3、在清除上次选择的城市的时候，需要注意获得的城市节点数组的长度是不断变化的。<br>]]>
    
    </summary>
    
      <category term="javascript" scheme="http://www.lixiaolin.me/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[64位电脑上安装oracle和plsql]]></title>
    <link href="http://www.lixiaolin.me/2016/01/03/oracle-install/"/>
    <id>http://www.lixiaolin.me/2016/01/03/oracle-install/</id>
    <published>2016-01-03T14:42:33.000Z</published>
    <updated>2016-01-03T14:58:36.388Z</updated>
    <content type="html"><![CDATA[<p>####这两天一直在安装oracle，前前后后装了四遍，遇到各种问题，实在是被oracle这个小妖精给折磨疯了。好在最后大功告成，现在总结一下。####</p>
<p>###<strong>一、安装环境：</strong>###</p>
<p>####1、win10 64位家庭版####</p>
<p>####2、oracle 11g 64位，<a href="http://www.oracle.com/technetwork/database/enterprise-edition/downloads/112010-win64soft-094461.html" target="_blank" rel="external"><strong>点我下载</strong></a>。</p>
<p>####找到这个下载即可：<img src="http://img.blog.csdn.net/20151202115803495" alt="这里写图片描述"></p>
<p>####oracle  client ，<a href="http://www.oracle.com/technetwork/topics/winsoft-085727.html" target="_blank" rel="external"><strong>点我下载</strong></a> ，   找到这个下载，instantclient-basic-nt-11.2.0.4.0.zip。</p>
<p>####3、PL/SQL 32位，<a href="http://download.csdn.net/detail/mysky2008/8515043" target="_blank" rel="external"><strong>点我下载</strong></a></p>
<p>####<strong>这里有2点需要注意的：</strong></p>
<p>####1、客户端我们这里使用的是instantclient即时客户端，不是传统的安装版本的，因为那个实在是太烦了，很难卸载干净。这个是免安装版的。</p>
<p>####2、instantclient的版本号需要和oracle数据库的版本号一致，我使用的就都是版本号为11的。<strong>并且一定要是32位的instantclient，一定要是32位的，一定要是32位的，重要的事情说三遍。</strong></p>
<p>####3、PL/SQL同样也是32位的。</p>
<hr>
<p>###<strong>二、安装步骤</strong>###</p>
<p>####下面正式开始安装。</p>
<p>####1、oracle 11g的安装不做赘述了，网上教程很多，基本一路默认安装即可，不过有一点倒是值得注意，安装完数据库后，会默认开始很多服务，但是有很多我们是不需要的，所以可以做一些设置，如下图：</p>
<p><img src="http://img.blog.csdn.net/20151202120502778" alt="这里写图片描述"></p>
<p>####<strong>前面5项服务平时都用不到，可以直接禁用。后面两项 ORCL和Listener才是我们需要的，设置为手动启用即可，以后每次需要先手动启动一下。</strong></p>
<p>####2、安装instantclient即时客户端。</p>
<p>####①将instantclient-basic-nt-11.2.0.4.0.zip解压至自己的文件夹，我放的是在D:\app\lixiaolin\instantclient_11_2</p>
<p>####②新增环境变量####</p>
<p>####NLS_LANG： AMERICAN_AMERICA.ZHS16GBK####</p>
<p>####TNS_ADMIN ：D:\app\lixiaolin\product\11.2.0\dbhome_1\NETWORK\ADMIN     注意这里不要忘记替换为自己的路径</p>
<p>####③安装PLSQL，同样不做赘述</p>
<p>####④设置PLSQL。打开PLSQL，不要登陆，直接进去。在 Tool-&gt;Prefrences-&gt;Connection下进行连接设置。</p>
<h4 id="u5982_u4E0B_u56FE_uFF1A"><a href="#u5982_u4E0B_u56FE_uFF1A" class="headerlink" title="如下图："></a>如下图：</h4><p><img src="http://img.blog.csdn.net/20151202121642839" alt="这里写图片描述"></p>
<p>####<strong>Oracle home：OraDb11g_home1</strong></p>
<h4 id="OCI_library_uFF1AD_3A_5Capp_5Clixiaolin_5Cinstantclient_11_2_5Coci-dll__u6CE8_u610F_u66FF_u6362_u4E3A_u81EA_u5DF1_u7684_u8DEF_u5F84"><a href="#OCI_library_uFF1AD_3A_5Capp_5Clixiaolin_5Cinstantclient_11_2_5Coci-dll__u6CE8_u610F_u66FF_u6362_u4E3A_u81EA_u5DF1_u7684_u8DEF_u5F84" class="headerlink" title="OCI library：D:\app\lixiaolin\instantclient_11_2\oci.dll  注意替换为自己的路径"></a><strong>OCI library：D:\app\lixiaolin\instantclient_11_2\oci.dll  注意替换为自己的路径</strong></h4><hr>
<h3 id="u4E09_u3001_u5927_u529F_u544A_u6210"><a href="#u4E09_u3001_u5927_u529F_u544A_u6210" class="headerlink" title="三、大功告成"></a><strong>三、大功告成</strong></h3><p>####好了，到了这里就大功告成了，再次打开PLSQL，会发现 Username这里多了一个system，database默认为之前设置的ORCL，输入密码就大功告成啦！</p>
<p><img src="http://img.blog.csdn.net/20151202143046588" alt="这里写图片描述"></p>
<p>####如下：<br><img src="http://img.blog.csdn.net/20151202143305385" alt="这里写图片描述"></p>
<p>####<strong>从此以后妈妈再也不用担心我安装oracle的问题了，哪里不会点哪里。</strong></p>
<p>####附赠完全卸载ORACLE数据库教程：<br><a href="http://blog.csdn.net/machinecat0898/article/details/7792471" target="_blank" rel="external">http://blog.csdn.net/machinecat0898/article/details/7792471</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>####这两天一直在安装oracle，前前后后装了四遍，遇到各种问题，实在是被oracle这个小妖精给折磨疯了。好在最后大功告成，现在总结一下。####</p>
<p>###<strong>一、安装环境：</strong>###</p>
<p>####1、win10 64位]]>
    </summary>
    
      <category term="ORACLE" scheme="http://www.lixiaolin.me/tags/ORACLE/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[归并排序之java实现]]></title>
    <link href="http://www.lixiaolin.me/2016/01/03/algorithm-merge-sorting/"/>
    <id>http://www.lixiaolin.me/2016/01/03/algorithm-merge-sorting/</id>
    <published>2016-01-03T04:20:27.000Z</published>
    <updated>2016-01-03T14:52:46.638Z</updated>
    <content type="html"><![CDATA[<p>毕业季在即，一大波面试接踵而来，为了一份好offer，所以最近在重新刷数据结构与算法。正好在博客里面记录一下。今天是归并排序的实现。<br>归并排序是典型的分治模式的实现，对一个数组A，采取三步实现：分解，解决，合并。<br>分解：分解待排序的n个元素的序列成各具n/2个元素的两个子序列。<br>解决：使用归并排序递归地排序两个子序列。<br>合并：合并两个已排序的子序列产生最后排好序的序列。<br><a id="more"></a><br>那么到底什么是归并排序呢？<br>归并排序的就是将两个已经排好序的序列进行合并，使得合并后的序列仍是有序的。因为在迭代中，序列中最开始只有一个元素，那么它显然是有序的，进行归并后，在有序的基础上仍然是有序的。<br>举个例子：假设桌面上有两堆面朝上的扑克牌，都已排好序。最小的牌在顶部。我们希望把两堆牌合并成一堆排序好的牌，牌面朝下的放在桌子上。那么我们自然想到这么做：取两堆牌顶上的较小的那张牌，放到桌子上（这时候取完牌的那堆牌已经露出了一张新的牌）。按照这个步骤继续取牌。直到有一堆牌为空为止。这时候我们只需要把剩下的牌一张张的放桌子上就好了。所以基本需要常量时间，最多n个步骤，所以合并牌需要O(n)的时间。<br>可能有人会想到，什么时候知道有堆牌为空呢？难道需要每次拿牌的时候都去判断是否为空吗？并不需要这样做，在下面的伪代码中可以看到使用了哨兵的概念，哨兵取为无穷大，结果每当显露一张值为无穷大的牌的时候，显然进入比较的If语句里面，它不可能为较小的牌，除非两堆最顶上的牌都是无穷大，但是这种情况时，所有的非哨兵牌都已经放到桌子上了。已经放了r-p+1张牌，这个时候循环已经结束了。<br>归并部分的伪代码如下：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">MERGE(A,p,q,r)</span><br><span class="line">  n1=q-p+<span class="number">1</span>;</span><br><span class="line">  n2=r-q;</span><br><span class="line">  let L[<span class="number">1.</span>..n1+<span class="number">1</span>] and R[<span class="number">1.</span>..n2+<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">for</span> i=<span class="number">1</span> to n1</span><br><span class="line">     L[i]=A(p+i-<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> j=<span class="number">1</span> to n2</span><br><span class="line">     R[j]=A(q+j)</span><br><span class="line">  L[n1+<span class="number">1</span>]=∞</span><br><span class="line">  R[n2+<span class="number">1</span>]=∞</span><br><span class="line">  i=<span class="number">1</span></span><br><span class="line">  j=<span class="number">1</span></span><br><span class="line">  <span class="keyword">for</span> k=p to r</span><br><span class="line">    <span class="keyword">if</span> L[i]&lt;=R[j]</span><br><span class="line">      A[k]=L[i]</span><br><span class="line">      i=i+<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      A[k]=R[j]</span><br><span class="line">      j=j+<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>可以看到有这么一行L[n1+1]=∞，这里L[n1+1]=∞ ,这里使用了哨兵的概念。这样是为了避免在每个基本步骤都需要去检车是否有堆为空，节省了效率<br>整个归并排序的复杂度为：O(nlgn)<br> Java实现如下：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeSentry</span><span class="params">(<span class="keyword">int</span>[] source, <span class="keyword">int</span> begin, <span class="keyword">int</span> middle, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    <span class="keyword">int</span> len1=middle-begin+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> len2=end-middle;</span><br><span class="line">    <span class="keyword">int</span>[] array1=Arrays.copyOfRange(source,begin,middle+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span>[] array2=Arrays.copyOfRange(source, middle+<span class="number">1</span>, end+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=begin;k&lt;=end;k++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(i&lt;len1&amp;&amp;j&lt;len2)&#123;</span><br><span class="line">        <span class="keyword">if</span>(array1[i]&lt;array2[j]||array1[i]==array2[j])&#123;</span><br><span class="line">          source[k]=array1[i];</span><br><span class="line">          i++;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(array1[i]&gt;array2[j])&#123;</span><br><span class="line">          source[k]=array2[j];</span><br><span class="line">          j++;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(i&gt;=len1&amp;&amp;j&lt;len2)&#123;</span><br><span class="line">        source[k]=array2[j];</span><br><span class="line">        j++;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(j&gt;=len2&amp;&amp;i&lt;len1)&#123;</span><br><span class="line">        source[k]=array1[i];</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>完整的伪代码：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">MERGE-SORT(A,p,r)</span><br><span class="line"> <span class="keyword">if</span> p&lt;r</span><br><span class="line">   q=(p+r)/<span class="number">2</span></span><br><span class="line">   MERGE-SORT(A,p,q)</span><br><span class="line">   MERGE-SORT(A,p+<span class="number">1</span>,r)</span><br><span class="line">   MERGE(A,p,q,r)</span><br><span class="line"></span><br><span class="line">MERGE(A,p,q,r)</span><br><span class="line">  n1=q-p+<span class="number">1</span>;</span><br><span class="line">  n2=r-q;</span><br><span class="line">  let L[<span class="number">1.</span>..n1+<span class="number">1</span>] and R[<span class="number">1.</span>..n2+<span class="number">1</span>]</span><br><span class="line">  <span class="keyword">for</span> i=<span class="number">1</span> to n1</span><br><span class="line">     L[i]=A(p+i-<span class="number">1</span>);</span><br><span class="line">  <span class="keyword">for</span> j=<span class="number">1</span> to n2</span><br><span class="line">     R[j]=A(q+j)</span><br><span class="line">  L[n1+<span class="number">1</span>]=∞</span><br><span class="line">  R[n2+<span class="number">1</span>]=∞</span><br><span class="line">  i=<span class="number">1</span></span><br><span class="line">  j=<span class="number">1</span></span><br><span class="line">  <span class="keyword">for</span> k=p to r</span><br><span class="line">    <span class="keyword">if</span> L[i]&lt;=R[j]</span><br><span class="line">      A[k]=L[i]</span><br><span class="line">      i=i+<span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      A[k]=R[j]</span><br><span class="line">      j=j+<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>完整的java代码：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> MergeSort &#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">long</span> begin=System.currentTimeMillis();</span><br><span class="line">    <span class="keyword">int</span>[] a=<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>,<span class="number">22</span>,<span class="number">2</span>,<span class="number">12</span>,<span class="number">120</span>,<span class="number">9</span>,<span class="number">87</span>&#125;;</span><br><span class="line">    mergerSort(a, <span class="number">0</span>, a.length-<span class="number">1</span>);</span><br><span class="line">    System.out.println(Arrays.toString(a));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergerSort</span><span class="params">(<span class="keyword">int</span>[] source,<span class="keyword">int</span> begin,<span class="keyword">int</span> end)</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> middle;</span><br><span class="line">    <span class="keyword">if</span>(begin&lt;end)&#123;</span><br><span class="line">      middle=(<span class="keyword">int</span>) (Math.<span class="built_in">floor</span>((begin+end))/<span class="number">2</span>);</span><br><span class="line">      mergerSort(source, begin, middle);</span><br><span class="line">      mergerSort(source, middle+<span class="number">1</span>, end);</span><br><span class="line">      mergeSentry(source,begin,middle,end);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">mergeSentry</span><span class="params">(<span class="keyword">int</span>[] source, <span class="keyword">int</span> begin, <span class="keyword">int</span> middle, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    <span class="keyword">int</span> len1=middle-begin+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> len2=end-middle;</span><br><span class="line">    <span class="keyword">int</span>[] array1=Arrays.copyOfRange(source,begin,middle+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span>[] array2=Arrays.copyOfRange(source, middle+<span class="number">1</span>, end+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">0</span>,j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> k=begin;k&lt;=end;k++)&#123;</span><br><span class="line">      <span class="keyword">if</span>(i&lt;len1&amp;&amp;j&lt;len2)&#123;</span><br><span class="line">        <span class="keyword">if</span>(array1[i]&lt;array2[j]||array1[i]==array2[j])&#123;</span><br><span class="line">          source[k]=array1[i];</span><br><span class="line">          i++;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(array1[i]&gt;array2[j])&#123;</span><br><span class="line">          source[k]=array2[j];</span><br><span class="line">          j++;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(i&gt;=len1&amp;&amp;j&lt;len2)&#123;</span><br><span class="line">        source[k]=array2[j];</span><br><span class="line">        j++;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span>(j&gt;=len2&amp;&amp;i&lt;len1)&#123;</span><br><span class="line">        source[k]=array1[i];</span><br><span class="line">        i++;</span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>毕业季在即，一大波面试接踵而来，为了一份好offer，所以最近在重新刷数据结构与算法。正好在博客里面记录一下。今天是归并排序的实现。<br>归并排序是典型的分治模式的实现，对一个数组A，采取三步实现：分解，解决，合并。<br>分解：分解待排序的n个元素的序列成各具n/2个元素的两个子序列。<br>解决：使用归并排序递归地排序两个子序列。<br>合并：合并两个已排序的子序列产生最后排好序的序列。<br>]]>
    
    </summary>
    
      <category term="Algorithm" scheme="http://www.lixiaolin.me/tags/Algorithm/"/>
    
      <category term="Binary-Tree" scheme="http://www.lixiaolin.me/tags/Binary-Tree/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[用户登陆失败锁定账户的实现]]></title>
    <link href="http://www.lixiaolin.me/2016/01/03/login-fail-lock/"/>
    <id>http://www.lixiaolin.me/2016/01/03/login-fail-lock/</id>
    <published>2016-01-03T03:59:17.000Z</published>
    <updated>2016-01-03T04:17:41.665Z</updated>
    <content type="html"><![CDATA[<p>最近在公司实习的项目遇到这么一个业务需求：用户登录时如果5分钟内密码连续3次输入错误就将用户锁定，24小时后自动解锁。分析一下，这个需求有很多种方法可以实现，比较简单的就是采用数据库来实现，我采用的是比较老实的办法，欢迎大家留言指正。<br>公司开发采用的是struts1.1+oracle+MVC,由于某些样式不支持的问题，用户登录数据的检验这些操作我都是传输到servlet中进行的。<br><a id="more"></a></p>
<h2 id="u7B2C_u4E00_u6B65_uFF1A_u65B0_u5EFA_u7528_u6237_u767B_u5F55_u8BB0_u5F55_u8868"><a href="#u7B2C_u4E00_u6B65_uFF1A_u65B0_u5EFA_u7528_u6237_u767B_u5F55_u8BB0_u5F55_u8868" class="headerlink" title="第一步：新建用户登录记录表"></a>第一步：新建用户登录记录表</h2><p>直接贴出sql语句：</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">create <span class="tag">table</span> C_LOGIN_RECORD</span><br><span class="line">(</span><br><span class="line">  c_id        <span class="function"><span class="title">NUMBER</span><span class="params">(<span class="number">10</span>)</span></span> not null, --登录记录ID，不为空</span><br><span class="line">  username    <span class="function"><span class="title">VARCHAR2</span><span class="params">(<span class="number">40</span>)</span></span>,       --用户名</span><br><span class="line">  lock_flag   <span class="function"><span class="title">VARCHAR2</span><span class="params">(<span class="number">10</span>)</span></span>,       --锁定标志，<span class="string">'1'</span>代表锁定状态 <span class="string">'0'</span>未锁定状态</span><br><span class="line">  failure_num <span class="function"><span class="title">VARCHAR2</span><span class="params">(<span class="number">10</span>)</span></span>,       --登录失败次数</span><br><span class="line">  login_date  DATE                --登录时间，默认为当前时间</span><br><span class="line">)</span><br></pre></td></tr></table></figure>
<p>登录的时候直接往其中插入数据就好，这里c_id字段非空，是自动递增的，由于在oracle中没有自带的acto-increment，所以采用触发器+序列的方式来实现，代码如下：</p>
<figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- Create sequence</span></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">sequence</span> LOGIN_AUTOINC_SEQ</span><br><span class="line"><span class="keyword">minvalue</span> <span class="number">1</span></span><br><span class="line">maxvalue <span class="number">99999999</span></span><br><span class="line"><span class="keyword">start</span> <span class="keyword">with</span> <span class="number">43</span></span><br><span class="line"><span class="keyword">increment</span> <span class="keyword">by</span> <span class="number">1</span></span><br><span class="line">nocache</span><br><span class="line"><span class="keyword">order</span>;</span></span><br><span class="line"><span class="comment">-- Create trigger</span></span><br><span class="line"><span class="operator"><span class="keyword">create</span> <span class="keyword">or</span> <span class="keyword">replace</span> <span class="keyword">trigger</span> login_autoinc_tg</span><br><span class="line">  <span class="keyword">before</span> <span class="keyword">insert</span> <span class="keyword">on</span> C_LOGIN_RECORD</span><br><span class="line">  <span class="keyword">for</span> <span class="keyword">each</span> <span class="keyword">row</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">  <span class="keyword">select</span> login_autoinc_seq.<span class="keyword">nextval</span> <span class="keyword">into</span> :<span class="keyword">new</span>.c_id <span class="keyword">from</span> dual;</span></span><br><span class="line"><span class="operator"><span class="keyword">end</span> login_autoinc_tg;</span></span><br></pre></td></tr></table></figure>
<p>当往其中插入数据的时候，就会触发触发器，获得ID</p>
<h2 id="u7B2C_u4E8C_u6B65_uFF1A_u5B8C_u6210dao_u5C42_u7684_u65B9_u6CD5"><a href="#u7B2C_u4E8C_u6B65_uFF1A_u5B8C_u6210dao_u5C42_u7684_u65B9_u6CD5" class="headerlink" title="第二步：完成dao层的方法"></a>第二步：完成dao层的方法</h2><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line">UserParaDao.java</span><br><span class="line"><span class="comment">/**</span><br><span class="line">   * 判断用户名和密码是否匹配</span><br><span class="line">   *</span><br><span class="line">   * @param userPara</span><br><span class="line">   * @return</span><br><span class="line">   * @throws Exception</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="built_in">boolean</span> checkNameAndPsw(UserPara userPara) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="keyword">String</span> sql = <span class="string">"SELECT PASSWORD FROM C_USER WHERE NAME=?\n"</span>;</span><br><span class="line">    ResultSet rs = DaoUtil.executeQuery(DaoTools.getConnName(), sql,</span><br><span class="line">        <span class="keyword">new</span> <span class="keyword">String</span>[] &#123; userPara.getName() &#125;);<span class="comment">/*说明一下，这里和后面用到的DaoUtil.executeQuery()方法是公司平台封装的方法，就是一个简单的连接oracle的封装*/</span></span><br><span class="line">    <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (userPara.getPassword().equals(rs.getString(<span class="string">"PASSWORD"</span>))) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 判断用户是否存在</span><br><span class="line">   *</span><br><span class="line">   * @param userName</span><br><span class="line">   * @return</span><br><span class="line">   * @throws Exception</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="built_in">boolean</span> checkUser(<span class="keyword">String</span> userName) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="keyword">String</span> sql = <span class="string">"SELECT NAME FROM C_USER WHERE NAME=?\n"</span>;</span><br><span class="line">    ResultSet rs = DaoUtil.executeQuery(DaoTools.getConnName(), sql,</span><br><span class="line">        <span class="keyword">new</span> <span class="keyword">String</span>[] &#123; userName &#125;);</span><br><span class="line">    <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 根据用户名判断是否有过登录记录</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="built_in">boolean</span> checkLoginRecord(<span class="keyword">String</span> userName) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="keyword">String</span> sql = <span class="string">"SELECT COUNT(*) num FROM C_LOGIN_RECORD WHERE USERNAME=?\n "</span>;</span><br><span class="line">    ResultSet rs = DaoUtil.executeQuery(DaoTools.getConnName(), sql,</span><br><span class="line">        <span class="keyword">new</span> <span class="keyword">String</span>[] &#123; userName &#125;);</span><br><span class="line">    <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">"0"</span>.equals(rs.getString(<span class="string">"num"</span>))) &#123;</span><br><span class="line">          <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 删除用户的登录记录</span><br><span class="line">   *</span><br><span class="line">   * @param userName</span><br><span class="line">   * @throws Exception</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> deleteLoginRecord(<span class="keyword">String</span> userName) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="keyword">String</span> sql = <span class="string">"DELETE FROM C_LOGIN_RECORD WHERE USERNAME=? \n"</span>;</span><br><span class="line">    DaoUtil.executeUpdate(DaoTools.getConnName(), sql,</span><br><span class="line">        <span class="keyword">new</span> <span class="keyword">String</span>[] &#123; userName &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 获取用户最近的一条登录记录</span><br><span class="line">   *</span><br><span class="line">   * @param userName</span><br><span class="line">   * @return</span><br><span class="line">   * @throws Exception</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> ResultSet getLatestLoginRecord(<span class="keyword">String</span> userName) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="keyword">String</span> sql = <span class="string">"SELECT USERNAME, LOCK_FLAG, FAILURE_NUM, LOGIN_DATE "</span></span><br><span class="line">        + <span class="string">" FROM C_LOGIN_RECORD WHERE  LOGIN_DATE=(SELECT MAX(LOGIN_DATE)"</span></span><br><span class="line">        + <span class="string">"FROM C_LOGIN_RECORD WHERE USERNAME=? GROUP BY USERNAME)"</span>;</span><br><span class="line">    <span class="keyword">return</span> DaoUtil.executeQuery(DaoTools.getConnName(), sql,</span><br><span class="line">        <span class="keyword">new</span> <span class="keyword">String</span>[] &#123; userName &#125;);</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 获取用户登录失败次数为2的登录登录时间</span><br><span class="line">   * @param userName</span><br><span class="line">   * @return</span><br><span class="line">   * @throws Exception</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">String</span> getFaNum2Record(<span class="keyword">String</span> userName) <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">    <span class="keyword">String</span> sql = <span class="string">"SELECT USERNAME,LOGIN_DATE FROM C_LOGIN_RECORD "</span></span><br><span class="line">        + <span class="string">"  WHERE USERNAME=? AND FAILURE_NUM=2"</span>;</span><br><span class="line">    ResultSet rs = DaoUtil.executeQuery(DaoTools.getConnName(), sql,</span><br><span class="line">        <span class="keyword">new</span> <span class="keyword">String</span>[] &#123; userName &#125;);</span><br><span class="line">    <span class="keyword">if</span> (rs != <span class="keyword">null</span>) &#123;</span><br><span class="line">      <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">        <span class="keyword">return</span> rs.getString(<span class="string">"LOGIN_DATE"</span>).replace(<span class="string">"T"</span>, <span class="string">" "</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   * 插入登录记录</span><br><span class="line">   * @param userName</span><br><span class="line">   * @param lockFlag</span><br><span class="line">   * @param failureNum</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">void</span> insertLoginRecord(<span class="keyword">String</span> userName, <span class="keyword">String</span> lockFlag,</span><br><span class="line">      <span class="keyword">String</span> failureNum) &#123;</span><br><span class="line">    List&lt;<span class="keyword">String</span>&gt; list=<span class="keyword">new</span> ArrayList&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">    <span class="keyword">String</span> sql=<span class="string">"INSERT INTO C_LOGIN_RECORD(USERNAME,LOCK_FLAG,FAILURE_NUM,"</span> +</span><br><span class="line">    <span class="string">"LOGIN_DATE) values(? ,? ,? , sysdate)"</span>;</span><br><span class="line">    list.<span class="built_in">add</span>(userName);</span><br><span class="line">    list.<span class="built_in">add</span>(lockFlag);</span><br><span class="line">    list.<span class="built_in">add</span>(failureNum);</span><br><span class="line">    DaoUtil.executeUpdate(DaoTools.getConnName(), sql, list.toArray());</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<h2 id="u7B2C_u4E09_u6B65_uFF0Cservlet_u4E2D_u8FDB_u884C_u6821_u9A8C"><a href="#u7B2C_u4E09_u6B65_uFF0Cservlet_u4E2D_u8FDB_u884C_u6821_u9A8C" class="headerlink" title="第三步，servlet中进行校验"></a>第三步，servlet中进行校验</h2><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br></pre></td><td class="code"><pre><span class="line">LoginServlet<span class="built_in">.</span>java</span><br><span class="line"><span class="keyword">public</span> <span class="literal">void</span> doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">      throws ServletException, IOException &#123;</span><br><span class="line">    <span class="built_in">String</span> userName = request<span class="built_in">.</span>getParameter(<span class="string">"username"</span>);</span><br><span class="line">    <span class="built_in">String</span> passWord = request<span class="built_in">.</span>getParameter(<span class="string">"password"</span>);</span><br><span class="line">    UserPara userPara = <span class="literal">new</span> UserPara(userName, passWord);</span><br><span class="line">    UserParaService service = <span class="literal">new</span> UserParaService();<span class="comment">/*service层是对dao层的封装，里面加上了一些基本的转换方法*/</span></span><br><span class="line">    try &#123;</span><br><span class="line">      <span class="keyword">if</span> (service<span class="built_in">.</span>checkUser(userName)) &#123;</span><br><span class="line">        <span class="comment">// 用户存在</span></span><br><span class="line">        <span class="keyword">if</span> (service<span class="built_in">.</span>checkLoginRecord(userName)) &#123;</span><br><span class="line">          <span class="comment">// 用户有过登录记录</span></span><br><span class="line">          <span class="keyword">ResultSet</span> rs = service<span class="built_in">.</span>getLatestLoginRecord(userName);</span><br><span class="line">          <span class="built_in">String</span> lockFlag = <span class="string">""</span>;</span><br><span class="line">          <span class="built_in">String</span> failureNum = <span class="string">""</span>;</span><br><span class="line">          <span class="built_in">String</span> loginDate = <span class="string">""</span>;</span><br><span class="line">          <span class="keyword">if</span> (rs != <span class="built_in">null</span> <span class="subst">&amp;&amp;</span> rs<span class="built_in">.</span>next()) &#123;</span><br><span class="line">            lockFlag = rs<span class="built_in">.</span>getString(<span class="string">"LOCK_FLAG"</span>);</span><br><span class="line">            failureNum = rs<span class="built_in">.</span>getString(<span class="string">"FAILURE_NUM"</span>);</span><br><span class="line">            loginDate = rs<span class="built_in">.</span>getString(<span class="string">"LOGIN_DATE"</span>)<span class="built_in">.</span>replace(<span class="string">"T"</span>, <span class="string">" "</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> (<span class="string">"1"</span><span class="built_in">.</span><span class="keyword">equals</span>(lockFlag)) &#123;</span><br><span class="line">            <span class="comment">// 用户被锁定</span></span><br><span class="line">            <span class="keyword">if</span> (service<span class="built_in">.</span>localdateLtDate2(loginDate)) &#123;</span><br><span class="line">              <span class="comment">// 锁定时间超过一天</span></span><br><span class="line">              <span class="comment">//删除用户的登录记录</span></span><br><span class="line">              service<span class="built_in">.</span>deleteLoginRecord(userName);</span><br><span class="line">              <span class="keyword">if</span>(service<span class="built_in">.</span>checkNameAndPsw(userPara))&#123;</span><br><span class="line">                <span class="comment">//用户名和密码匹配</span></span><br><span class="line">                service<span class="built_in">.</span>insertLoginRecord(userName, <span class="string">"0"</span>, <span class="string">"0"</span>);</span><br><span class="line">                request<span class="built_in">.</span>getSession()<span class="built_in">.</span>setAttribute(<span class="string">"LoginFlag"</span>, <span class="string">"1"</span>);</span><br><span class="line">                response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/emp/ePricePara.do?action=init"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">              &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//用户名密码不匹配</span></span><br><span class="line">                service<span class="built_in">.</span>insertLoginRecord(userName, <span class="string">"0"</span>, <span class="string">"1"</span>);</span><br><span class="line">                response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/login/login.jsp?error=2"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">              &#125;</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">              <span class="comment">// 锁定时间未满一天</span></span><br><span class="line">              response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/login/login.jsp?error=3"</span>);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 用户未被锁定</span></span><br><span class="line">            <span class="keyword">if</span>(service<span class="built_in">.</span>checkNameAndPsw(userPara))&#123;</span><br><span class="line">              <span class="comment">//用户名密码匹配</span></span><br><span class="line">              service<span class="built_in">.</span>deleteLoginRecord(userName);</span><br><span class="line">              service<span class="built_in">.</span>insertLoginRecord(userName, <span class="string">"0"</span>, <span class="string">"0"</span>);</span><br><span class="line">              request<span class="built_in">.</span>getSession()<span class="built_in">.</span>setAttribute(<span class="string">"LoginFlag"</span>, <span class="string">"1"</span>);</span><br><span class="line">              response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/emp/ePricePara.do?action=init"</span>);</span><br><span class="line">              <span class="keyword">return</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              <span class="comment">//用户名密码不匹配</span></span><br><span class="line">              <span class="keyword">if</span>(service<span class="built_in">.</span>localdateLtDate(loginDate))&#123;</span><br><span class="line">                <span class="comment">//距离上次登录失败超过5分钟</span></span><br><span class="line">                service<span class="built_in">.</span>deleteLoginRecord(userName);</span><br><span class="line">                service<span class="built_in">.</span>insertLoginRecord(userName, <span class="string">"0"</span>, <span class="string">"1"</span>);</span><br><span class="line">                response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/login/login.jsp?error=2"</span>);</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">              &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="comment">//未超过5分钟</span></span><br><span class="line">                <span class="keyword">if</span>(<span class="string">"2"</span><span class="built_in">.</span><span class="keyword">equals</span>(failureNum))&#123;</span><br><span class="line">                  <span class="comment">//上次登录失败时已错误两次</span></span><br><span class="line">                  <span class="built_in">String</span> date1=service<span class="built_in">.</span>getFaNum2Record(userName);</span><br><span class="line">                  <span class="keyword">if</span>(service<span class="built_in">.</span>localdateLtDate(date1))&#123;</span><br><span class="line">                    <span class="comment">//距第一次登录错误时间大于5分钟</span></span><br><span class="line">                    service<span class="built_in">.</span>deleteLoginRecord(userName);</span><br><span class="line">                    service<span class="built_in">.</span>insertLoginRecord(userName, <span class="string">"0"</span>, <span class="string">"1"</span>);</span><br><span class="line">                    response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/login/login.jsp?error=2"</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">                  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="comment">//在5分钟以内</span></span><br><span class="line">                    service<span class="built_in">.</span>insertLoginRecord(userName, <span class="string">"1"</span>, <span class="string">"3"</span>);</span><br><span class="line">                    response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/login/login.jsp?error=4"</span>);</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                  &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                  <span class="comment">//上次登录失败时没超过两次</span></span><br><span class="line">                  service<span class="built_in">.</span>insertLoginRecord(userName, <span class="string">"0"</span>, <span class="built_in">String</span><span class="built_in">.</span>valueOf((<span class="built_in">Integer</span><span class="built_in">.</span>parseInt(failureNum)+<span class="number">1</span>)));</span><br><span class="line">                  response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/login/login.jsp?error=2"</span>);</span><br><span class="line">                  <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">          <span class="comment">// 用户未有过登录记录</span></span><br><span class="line">          <span class="keyword">if</span>(service<span class="built_in">.</span>checkNameAndPsw(userPara))&#123;</span><br><span class="line">            <span class="comment">//用户名密码匹配</span></span><br><span class="line">            service<span class="built_in">.</span>insertLoginRecord(userName, <span class="string">"0"</span>, <span class="string">"0"</span>);</span><br><span class="line">            request<span class="built_in">.</span>getSession()<span class="built_in">.</span>setAttribute(<span class="string">"LoginFlag"</span>, <span class="string">"1"</span>);</span><br><span class="line">            response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/emp/ePricePara.do?action=init"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//用户名密码不匹配</span></span><br><span class="line">            service<span class="built_in">.</span>insertLoginRecord(userName, <span class="string">"0"</span>, <span class="string">"1"</span>);</span><br><span class="line">            response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/login/login.jsp?error=2"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 用户不存在</span></span><br><span class="line">        response<span class="built_in">.</span>sendRedirect(<span class="string">"http://localhost:8080/web/prepay/pur/login/login.jsp?error=1"</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; catch (Exception e) &#123;</span><br><span class="line">      <span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">      e<span class="built_in">.</span>printStackTrace();</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<p>service层的部分代码：</p>
<figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">UserParaService<span class="built_in">.</span>java</span><br><span class="line"><span class="comment">/**</span><br><span class="line">   *判断当前时间与给定时间差是否大于5分钟</span><br><span class="line">   * @param date</span><br><span class="line">   * @return 大于5分钟返回true</span><br><span class="line">   * @throws Exception</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="built_in">boolean</span> localdateLtDate(<span class="built_in">String</span> <span class="built_in">date</span>) throws Exception&#123;</span><br><span class="line">    SimpleDateFormat sdf=<span class="literal">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd HH:mm:ss"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">Date</span> date1=sdf<span class="built_in">.</span>parse(<span class="built_in">date</span>);</span><br><span class="line">    <span class="built_in">Date</span> now=sdf<span class="built_in">.</span>parse(sdf<span class="built_in">.</span>format(<span class="literal">new</span> <span class="built_in">Date</span>()));</span><br><span class="line">    <span class="keyword">if</span>(now<span class="built_in">.</span>getTime()<span class="attribute">-date1</span><span class="built_in">.</span>getTime()&gt;<span class="number">5</span>*<span class="number">60</span>*<span class="number">1000</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span><br><span class="line">   *判断当前时间与给定时间差是否大于一天</span><br><span class="line">   * @param date</span><br><span class="line">   * @return 大于一天返回true</span><br><span class="line">   * @throws Exception</span><br><span class="line">   */</span></span><br><span class="line">  <span class="keyword">public</span> <span class="built_in">boolean</span> localdateLtDate2(<span class="built_in">String</span> <span class="built_in">date</span>) throws Exception&#123;</span><br><span class="line">    SimpleDateFormat sdf=<span class="literal">new</span> SimpleDateFormat(<span class="string">"yyyyMMdd HH:mm:ss"</span>);</span><br><span class="line">    <span class="built_in">Date</span> date1=sdf<span class="built_in">.</span>parse(<span class="built_in">date</span>);</span><br><span class="line">    <span class="built_in">Date</span> now=sdf<span class="built_in">.</span>parse(sdf<span class="built_in">.</span>format(<span class="literal">new</span> <span class="built_in">Date</span>()));</span><br><span class="line">    <span class="keyword">if</span>(now<span class="built_in">.</span>getTime()<span class="attribute">-date1</span><span class="built_in">.</span>getTime()&gt;<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>*<span class="number">1000</span>)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure>
<p>登录jsp的js处理：</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span>&gt;</span><span class="javascript"></span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.body.onload=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> errori=<span class="string">'&lt;%=request.getParameter("error")%&gt;'</span>;</span><br><span class="line">  <span class="keyword">if</span>(errori==<span class="string">'1'</span>)&#123;</span><br><span class="line">    alert(<span class="string">"用户不存在!"</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(errori==<span class="string">'2'</span>)&#123;</span><br><span class="line">      alert(<span class="string">'用户名密码不匹配!'</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span> <span class="keyword">if</span>(errori==<span class="string">'3'</span>)&#123;</span><br><span class="line">    alert(<span class="string">"用户处于锁定状态!"</span>);&#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(errori==<span class="string">'4'</span>)&#123;</span><br><span class="line">    alert(<span class="string">'密码连续3次输入错误，用户将被锁定24小时!'</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">if</span>(<span class="built_in">document</span>.myform.username.value==<span class="string">''</span>&amp;&amp;<span class="built_in">document</span>.myform.password.value==<span class="string">''</span>)&#123;</span><br><span class="line">    <span class="built_in">document</span>.myform.username.focus();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">EnterPress</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> e = e || <span class="built_in">window</span>.event;</span><br><span class="line">  <span class="keyword">if</span>(e.keyCode == <span class="number">13</span>)&#123;</span><br><span class="line">    checkuser();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkuser</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">var</span> forma=<span class="built_in">document</span>.forms[<span class="number">0</span>];</span><br><span class="line">  <span class="keyword">if</span>(forma.username.value.length&gt;<span class="number">1</span>&amp;&amp;forma.password.value.length&gt;<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    alert(<span class="string">'用户名或密码不能为空'</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近在公司实习的项目遇到这么一个业务需求：用户登录时如果5分钟内密码连续3次输入错误就将用户锁定，24小时后自动解锁。分析一下，这个需求有很多种方法可以实现，比较简单的就是采用数据库来实现，我采用的是比较老实的办法，欢迎大家留言指正。<br>公司开发采用的是struts1.1+oracle+MVC,由于某些样式不支持的问题，用户登录数据的检验这些操作我都是传输到servlet中进行的。<br>]]>
    
    </summary>
    
      <category term="JAVA" scheme="http://www.lixiaolin.me/tags/JAVA/"/>
    
      <category term="MVC" scheme="http://www.lixiaolin.me/tags/MVC/"/>
    
      <category term="ORACLE" scheme="http://www.lixiaolin.me/tags/ORACLE/"/>
    
  </entry>
  
</feed>
